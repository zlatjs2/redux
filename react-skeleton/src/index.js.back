import React from 'react';
import ReactDOM from 'react-dom';
import { createStore } from 'redux';
// import App from './components/App';
//
// const rootElement = document.getElementById('root');
// ReactDOM.render(<App />, rootElement);

/*
 * Action
 */
const INCREMENT = 'INCREMENT';

function increase(diff) {
  return {
    type: INCREMENT,
    addBy: diff,
  }
}

/*
 * Reducer
 */
const initialState = {
  value: 0,
}

const counterReducer = (state = initialState, action) => {
  switch (action.type) {
    case INCREMENT:
      return Object.assign({}, state, {
        value: state.value + action.addBy,
      });
    default:
      return state;
  }
}

/*
 * Store
 */

const store = createStore(counterReducer);

class App extends React.Component {
  constructor(props) {
    super(props);
    this.onClick = this.onClick.bind(this);
  }
  render() {

    console.log(this.props.store.getState(), this.props.value);

    let centerStyle = {
        position: 'fixed',
        top: '50%',
        left: '50%',
        transform: 'translate(-50%, -50%)',
        WebkitUserSelect: 'none',
        MozUserSelect: 'none',
        MsUserSelect:'none',
        userSelect: 'none',
        cursor: 'pointer'
    };
    return(
      <div style={centerStyle} onClick={this.onClick}>
        <h1> {this.props.store.getState().value} </h1>
      </div>
    );
  }
  onClick() {
    this.props.store.dispatch(increase(1));
  }
}

const render = () => {

    const appElement = document.getElementById('root');
    ReactDOM.render(
        <App store={store}/>,
        appElement
    );
};

store.subscribe(render);
render();
